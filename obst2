Algorithm OBST(g,q,a)
 {
for (i=0 ; i<=n-1;i++)
{
w[i,i]=q[i];
r[i,i]=0;
c[i,i]=0.0;

w[i,i+1]=q[i]+q[i+1]+p[i+1];
r[i,i+1]=i+1;
c[i,i+1]= q[i]+q[i+1]+p[i+1];

}

w[n,n]=q[n];
r[n,n]=0;
c[n,n]=0.0;
for(m=2; ;m<=n;m++)
for( i=0;i<=n-m;i++)
{
j = i + m;

w[i,j]=w[i,j-1]+p[j]+q[j];
k = Find(c,r,i,j);

c[i,j]=w[i,j]+c[i,k-1]+c[k,j];
r[i,j]= k;

write (411, rt), 140,n), 40,r41);
 }
 int Find(float c,int r,int i,int j)
 {
int min = 9999999;
int l;
for ( m = r[i,j-1] ;m<=r[i+1,j];m++  )
{

if (c[i, m — 1] +c[m,j] < min )
{
min=c[i, m — 1] +c[m,j];
l=m
}
}
return l;
}
